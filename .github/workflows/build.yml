name: Build

on:
  push:
    branches: master
  pull_request:
    branches: master

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install libcurl
      if: runner.os == 'Linux'
      run: |
          sudo apt-get update -y && sudo apt-get install -y libcurl4-openssl-dev
    - name: Install pandoc
      uses: r-lib/actions/setup-pandoc@v2
      with:
        pandoc-version: '2.19.2'
    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: '16.0.0'
    - name: Install R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.0.2'
    - name: Install renv and R dependencies
      uses: r-lib/actions/setup-renv@v2
      with:
        cache-version: 2
    - name: Install Hugo
      run: Rscript -e 'blogdown::install_hugo(version = "0.97.3")'

    - name: Cache rendered Rmarkdown content
      uses: actions/cache@v3
      with:
        path: |
          content/**/*.html
          blogdown/md5sum.txt
        key: rmarkdown_v1-${{ hashFiles('content/**/*.Rmd') }}
        restore-keys: rmarkdown_v1-

    - name: Build website
      run: Rscript -e 'blogdown::build_site(build_rmd = "md5sum")'
    - name: Deploy Preview to Netlify
      if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
      env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      run: |
          npm install netlify-cli -g
          netlify deploy --dir public
    - name: Publish to Netlify
      if: ${{ github.event_name == 'push' }}
      env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      run: |
          npm install netlify-cli -g
          netlify deploy --prod --dir public
